# -*- coding: utf-8 -*-
"""Untitled44.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/113GAwF6tC6YkTZ0H-DowJyVZC2sNN2-s
"""

import numpy as np
import pandas as pd

# Load the training data
DataX = pd.read_csv("DataX.csv")  # Replace with the actual path to your input data file
DataY = pd.read_csv("DataY.csv")  # Replace with the actual path to your output data file

# Preprocess the data
# Add a bias term (intercept) to the input features
DataX.insert(0, "Bias", 1)

# Convert data to NumPy arrays
X = DataX.to_numpy()
Y = DataY.to_numpy()

# Define hyperparameters
learning_rate = 0.02
num_iterations = 1000

# Initialize the weights with zeros
theta = np.zeros(X.shape[1])

# Gradient Descent algorithm
for i in range(num_iterations):
    # Compute the predictions
    predictions = X.dot(theta)

    # Compute the error (the difference between predictions and actual values)
    error = predictions - Y.flatten()

    # Compute the gradient
    gradient = X.T.dot(error) / len(Y)

    # Update the weights using the gradient and learning rate
    theta -= learning_rate * gradient

# Print the learned weights (theta)
print("Learned Weights (theta):")
print(theta)